name: Production Deploy

on:
  pull_request:
    branches:
      - main

jobs:
  deploy-to-prod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Get Tag Name
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Test SSH connection
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.RPI_IP }}
          username: ${{ secrets.RPI_USER }}
          key: ${{ secrets.RPI_SSH_KEY }}
          port: ${{ secrets.RPI_SSH_PORT }}
          script: |
            echo "Deploying tag: $TAG_NAME"

            echo "Logging into Docker..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "Pulling the new image..."
            docker pull calebjanhunen/fitracker-api:latest

    #   - name: Deploy Docker Image
    #     env:
    #       DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #       DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #     run: |
    #       ssh pi@${{ secrets.RASPBERRY_PI_HOST }} << 'EOF'
    #       echo "Logging into Docker..."
    #       echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    #       echo "Pulling the new image..."
    #       docker pull your-dockerhub-username/your-image-name:${GITHUB_REF#refs/tags/}

    #       echo "Stopping the old container..."
    #       docker stop your-container-name || true
    #       docker rm your-container-name || true

    #       echo "Running the new container with .env file on Raspberry Pi..."
    #       docker run -d --name your-container-name \
    #           --restart unless-stopped \
    #           --env-file /home/pi/docker/env/.env \
    #           -p 80:80 \
    #           your-dockerhub-username/your-image-name:${GITHUB_REF#refs/tags/}
    #       EOF
